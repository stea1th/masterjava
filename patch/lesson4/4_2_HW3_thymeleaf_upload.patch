Index: web/upload/src/main/webapp/WEB-INF/templates/result.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web/upload/src/main/webapp/WEB-INF/templates/result.html	(revision )
+++ web/upload/src/main/webapp/WEB-INF/templates/result.html	(revision )
@@ -0,0 +1,27 @@
+<html xmlns:th="http://www.thymeleaf.org">
+<head>
+    <meta charset="UTF-8">
+    <title>Uploaded users</title>
+</head>
+<body>
+<h4><a href="">Upload XML</a></h4>
+<h3>Uploaded users</h3>
+<table border="1" cellpadding="8" cellspacing="0">
+    <thead>
+    <tr>
+        <th>Full Name</th>
+        <th>Email</th>
+        <th>Flag</th>
+    </tr>
+    </thead>
+    <tbody>
+    <!--/*@thymesVar id="users" type="java.util.List<ru.javaops.masterjava.model.User>"*/-->
+    <tr th:each="user : ${users}">
+        <td th:text="${user.fullName}"></td>
+        <td th:utext="${user.email}"></td>
+        <td th:text="${user.flag}"></td>
+    </tr>
+    </tbody>
+</table>
+</body>
+</html>
\ No newline at end of file
Index: web/upload/src/main/java/ru/javaops/masterjava/upload/UserProcessor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web/upload/src/main/java/ru/javaops/masterjava/upload/UserProcessor.java	(revision )
+++ web/upload/src/main/java/ru/javaops/masterjava/upload/UserProcessor.java	(revision )
@@ -0,0 +1,28 @@
+package ru.javaops.masterjava.upload;
+
+import ru.javaops.masterjava.model.User;
+import ru.javaops.masterjava.model.UserFlag;
+import ru.javaops.masterjava.xml.util.StaxStreamProcessor;
+
+import javax.xml.stream.XMLStreamException;
+import javax.xml.stream.events.XMLEvent;
+import java.io.InputStream;
+import java.util.ArrayList;
+import java.util.List;
+
+public class UserProcessor {
+
+    public List<User> process(final InputStream is) throws XMLStreamException {
+        final StaxStreamProcessor processor = new StaxStreamProcessor(is);
+        List<User> users = new ArrayList<>();
+
+        while (processor.doUntil(XMLEvent.START_ELEMENT, "User")) {
+            final String email = processor.getAttribute("email");
+            final UserFlag flag = UserFlag.valueOf(processor.getAttribute("flag"));
+            final String fullName = processor.getReader().getElementText();
+            final User user = new User(fullName, email, flag);
+            users.add(user);
+        }
+        return users;
+    }
+}
Index: web/upload/src/main/java/ru/javaops/masterjava/model/UserFlag.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web/upload/src/main/java/ru/javaops/masterjava/model/UserFlag.java	(revision )
+++ web/upload/src/main/java/ru/javaops/masterjava/model/UserFlag.java	(revision )
@@ -0,0 +1,11 @@
+package ru.javaops.masterjava.model;
+
+/**
+ * gkislin
+ * 13.10.2016
+ */
+public enum UserFlag {
+    active,
+    deleted,
+    superuser;
+}
Index: web/upload/src/main/webapp/WEB-INF/templates/exception.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web/upload/src/main/webapp/WEB-INF/templates/exception.html	(revision )
+++ web/upload/src/main/webapp/WEB-INF/templates/exception.html	(revision )
@@ -0,0 +1,20 @@
+<html xmlns:th="http://www.thymeleaf.org">
+<head>
+    <meta charset="UTF-8">
+    <title>Application error</title>
+</head>
+<body>
+
+<div class="jumbotron">
+    <div class="container">
+        <br>
+        <h4>Application error: </h4>
+        <!--/*@thymesVar id="exception" type="java.lang.Exception"*/-->
+        <h2 th:text="${exception.message}">exception.message</h2>
+        <ul>
+            <li th:each="item:${exception.stackTrace}" th:text="${item}"></li>
+        </ul>
+    </div>
+</div>
+</body>
+</html>
\ No newline at end of file
Index: web/common-web/src/main/java/ru/javaops/masterjava/common/web/ThymeleafListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web/common-web/src/main/java/ru/javaops/masterjava/common/web/ThymeleafListener.java	(revision )
+++ web/common-web/src/main/java/ru/javaops/masterjava/common/web/ThymeleafListener.java	(revision )
@@ -0,0 +1,20 @@
+package ru.javaops.masterjava.common.web;
+
+import org.thymeleaf.TemplateEngine;
+
+import javax.servlet.ServletContextEvent;
+import javax.servlet.ServletContextListener;
+import javax.servlet.annotation.WebListener;
+
+@WebListener
+public class ThymeleafListener implements ServletContextListener {
+
+    public static TemplateEngine engine;
+
+    public void contextInitialized(ServletContextEvent sce) {
+        engine = ThymeleafUtil.getTemplateEngine(sce.getServletContext());
+    }
+
+    public void contextDestroyed(ServletContextEvent sce) {
+    }
+}
Index: web/upload/src/main/java/ru/javaops/masterjava/upload/UploadServlet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web/upload/src/main/java/ru/javaops/masterjava/upload/UploadServlet.java	(revision )
+++ web/upload/src/main/java/ru/javaops/masterjava/upload/UploadServlet.java	(revision )
@@ -0,0 +1,56 @@
+package ru.javaops.masterjava.upload;
+
+import org.apache.commons.fileupload.FileItemIterator;
+import org.apache.commons.fileupload.FileItemStream;
+import org.apache.commons.fileupload.servlet.ServletFileUpload;
+import org.thymeleaf.context.WebContext;
+import ru.javaops.masterjava.model.User;
+
+import javax.servlet.ServletException;
+import javax.servlet.annotation.WebServlet;
+import javax.servlet.http.HttpServlet;
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpServletResponse;
+import java.io.IOException;
+import java.io.InputStream;
+import java.util.List;
+
+import static ru.javaops.masterjava.common.web.ThymeleafListener.engine;
+
+@WebServlet("/")
+public class UploadServlet extends HttpServlet {
+
+    private final UserProcessor userProcessor = new UserProcessor();
+
+    @Override
+    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
+        final WebContext webContext = new WebContext(req, resp, req.getServletContext(), req.getLocale());
+        engine.process("upload", webContext, resp.getWriter());
+    }
+
+    @Override
+    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
+        final ServletFileUpload upload = new ServletFileUpload();
+        final WebContext webContext = new WebContext(req, resp, req.getServletContext(), req.getLocale());
+
+        try {
+//            https://commons.apache.org/proper/commons-fileupload/streaming.html
+
+            final FileItemIterator itemIterator = upload.getItemIterator(req);
+            while (itemIterator.hasNext()) { //expect that it's only one file
+                FileItemStream fileItemStream = itemIterator.next();
+                if (!fileItemStream.isFormField()) {
+                    try (InputStream is = fileItemStream.openStream()) {
+                        List<User> users = userProcessor.process(is);
+                        webContext.setVariable("users", users);
+                        engine.process("result", webContext, resp.getWriter());
+                    }
+                    break;
+                }
+            }
+        } catch (Exception e) {
+            webContext.setVariable("exception", e);
+            engine.process("exception", webContext, resp.getWriter());
+        }
+    }
+}
Index: web/common-web/src/main/java/ru/javaops/masterjava/common/web/ThymeleafUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web/common-web/src/main/java/ru/javaops/masterjava/common/web/ThymeleafUtil.java	(revision )
+++ web/common-web/src/main/java/ru/javaops/masterjava/common/web/ThymeleafUtil.java	(revision )
@@ -0,0 +1,24 @@
+package ru.javaops.masterjava.common.web;
+
+import org.thymeleaf.TemplateEngine;
+import org.thymeleaf.templatemode.TemplateMode;
+import org.thymeleaf.templateresolver.ServletContextTemplateResolver;
+
+import javax.servlet.ServletContext;
+
+public class ThymeleafUtil {
+
+    private ThymeleafUtil() {
+    }
+
+    public static TemplateEngine getTemplateEngine(ServletContext context) {
+        final ServletContextTemplateResolver templateResolver = new ServletContextTemplateResolver(context);
+        templateResolver.setTemplateMode(TemplateMode.HTML);
+        templateResolver.setPrefix("/WEB-INF/templates/");
+        templateResolver.setSuffix(".html");
+        templateResolver.setCacheTTLMs(1000L);
+        final TemplateEngine engine = new TemplateEngine();
+        engine.setTemplateResolver(templateResolver);
+        return engine;
+    }
+}
Index: web/common-web/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web/common-web/pom.xml	(revision )
+++ web/common-web/pom.xml	(revision )
@@ -0,0 +1,42 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+
+    <parent>
+        <groupId>ru.javaops</groupId>
+        <artifactId>parent</artifactId>
+        <relativePath>../../parent/pom.xml</relativePath>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+
+    <artifactId>common-web</artifactId>
+    <version>1.0-SNAPSHOT</version>
+    <name>Common Web</name>
+
+    <dependencies>
+        <dependency>
+            <groupId>${project.groupId}</groupId>
+            <artifactId>common</artifactId>
+            <version>${project.version}</version>
+        </dependency>
+        <dependency>
+            <groupId>commons-fileupload</groupId>
+            <artifactId>commons-fileupload</artifactId>
+            <version>1.3.3</version>
+        </dependency>
+        <dependency>
+            <groupId>javax.servlet</groupId>
+            <artifactId>javax.servlet-api</artifactId>
+            <version>3.1.0</version>
+            <scope>provided</scope>
+        </dependency>
+
+        <dependency>
+            <groupId>org.thymeleaf</groupId>
+            <artifactId>thymeleaf</artifactId>
+            <version>3.0.8.RELEASE</version>
+        </dependency>
+    </dependencies>
+</project>
\ No newline at end of file
Index: web/upload/src/main/java/ru/javaops/masterjava/model/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web/upload/src/main/java/ru/javaops/masterjava/model/User.java	(revision )
+++ web/upload/src/main/java/ru/javaops/masterjava/model/User.java	(revision )
@@ -0,0 +1,63 @@
+package ru.javaops.masterjava.model;
+
+import java.util.Objects;
+
+public class User {
+    private final Integer id;
+    private final String fullName;
+    private final String email;
+    private final UserFlag flag;
+
+    public User(String fullName, String email, UserFlag flag) {
+        this(null, fullName, email, flag);
+    }
+
+    public User(Integer id, String fullName, String email, UserFlag flag) {
+        this.id = id;
+        this.fullName = fullName;
+        this.email = email;
+        this.flag = flag;
+    }
+
+    public Integer getId() {
+        return id;
+    }
+
+    public String getFullName() {
+        return fullName;
+    }
+
+    public String getEmail() {
+        return email;
+    }
+
+    public UserFlag getFlag() {
+        return flag;
+    }
+
+    @Override
+    public boolean equals(Object o) {
+        if (this == o) return true;
+        if (o == null || getClass() != o.getClass()) return false;
+        User user = (User) o;
+        return Objects.equals(id, user.id) &&
+                Objects.equals(fullName, user.fullName) &&
+                Objects.equals(email, user.email) &&
+                flag == user.flag;
+    }
+
+    @Override
+    public int hashCode() {
+        return Objects.hash(id, fullName, email, flag);
+    }
+
+    @Override
+    public String toString() {
+        return "User (" +
+                "id=" + id +
+                ", fullName='" + fullName + '\'' +
+                ", email='" + email + '\'' +
+                ", flag=" + flag +
+                ')';
+    }
+}
Index: web/upload/src/main/webapp/WEB-INF/templates/upload.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web/upload/src/main/webapp/WEB-INF/templates/upload.html	(revision )
+++ web/upload/src/main/webapp/WEB-INF/templates/upload.html	(revision )
@@ -0,0 +1,16 @@
+<head>
+    <meta charset="UTF-8">
+    <title>Upload XML</title>
+</head>
+<body>
+<form action="" method="post" enctype="multipart/form-data">
+    <h3>Select xml file to upload</h3>
+    <p>
+        <input type="file" name="fileToUpload" id="fileToUpload"><br/>
+    </p>
+    <p>
+        <input type="submit" value="Upload" name="submit">
+    </p>
+</form>
+</body>
+</html>
\ No newline at end of file
Index: web/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web/pom.xml	(date 1509890578000)
+++ web/pom.xml	(revision )
@@ -9,6 +9,7 @@
     <name>Web</name>
 
     <modules>
+        <module>common-web</module>
         <module>upload</module>
         <module>webapp</module>
     </modules>
Index: parent-web/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- parent-web/pom.xml	(date 1509890578000)
+++ parent-web/pom.xml	(revision )
@@ -31,6 +31,11 @@
 
     <dependencies>
         <dependency>
+            <groupId>${project.groupId}</groupId>
+            <artifactId>common-web</artifactId>
+            <version>${project.version}</version>
+        </dependency>
+        <dependency>
             <groupId>javax.servlet</groupId>
             <artifactId>javax.servlet-api</artifactId>
             <version>3.1.0</version>
