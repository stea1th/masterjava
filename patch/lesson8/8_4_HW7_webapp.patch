Index: web/webapp/src/main/java/ru/javaops/masterjava/webapp/SendServlet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web/webapp/src/main/java/ru/javaops/masterjava/webapp/SendServlet.java	(revision )
+++ web/webapp/src/main/java/ru/javaops/masterjava/webapp/SendServlet.java	(revision )
@@ -0,0 +1,36 @@
+package ru.javaops.masterjava.webapp;
+
+import lombok.extern.slf4j.Slf4j;
+import ru.javaops.masterjava.service.mail.GroupResult;
+import ru.javaops.masterjava.service.mail.MailWSClient;
+
+import javax.servlet.ServletException;
+import javax.servlet.annotation.WebServlet;
+import javax.servlet.http.HttpServlet;
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpServletResponse;
+import java.io.IOException;
+
+@WebServlet("/send")
+@Slf4j
+public class SendServlet extends HttpServlet {
+    @Override
+    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
+        String result;
+        try {
+            log.info("Start sending");
+            req.setCharacterEncoding("UTF-8");
+            resp.setCharacterEncoding("UTF-8");
+            String users = req.getParameter("users");
+            String subject = req.getParameter("subject");
+            String body = req.getParameter("body");
+            GroupResult groupResult = MailWSClient.sendBulk(MailWSClient.split(users), subject, body);
+            result = groupResult.toString();
+            log.info("Processing finished with result: {}", result);
+        } catch (Exception e) {
+            log.error("Processing failed", e);
+            result = e.toString();
+        }
+        resp.getWriter().write(result);
+    }
+}
Index: web/webapp/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web/webapp/pom.xml	(date 1512398085000)
+++ web/webapp/pom.xml	(revision )
@@ -26,5 +26,10 @@
             <artifactId>persist</artifactId>
             <version>${project.version}</version>
         </dependency>
+        <dependency>
+            <groupId>${project.groupId}</groupId>
+            <artifactId>mail-api</artifactId>
+            <version>${project.version}</version>
+        </dependency>
     </dependencies>
 </project>
\ No newline at end of file
Index: web/webapp/src/main/webapp/WEB-INF/templates/users.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web/webapp/src/main/webapp/WEB-INF/templates/users.html	(date 1512398085000)
+++ web/webapp/src/main/webapp/WEB-INF/templates/users.html	(revision )
@@ -3,25 +3,62 @@
     <meta charset="UTF-8">
     <title>Users</title>
 </head>
+<!--https://code.jquery.com/-->
+<!--http://stackoverflow.com/a/24070373/548473-->
+<script src="https://code.jquery.com/jquery-3.2.1.min.js"
+        integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="
+        crossorigin="anonymous" async>
+</script>
 <body>
-<table border="1" cellpadding="8" cellspacing="0">
-    <thead>
-    <tr>
-        <th>#</th>
-        <th>Full Name</th>
-        <th>Email</th>
-        <th>Flag</th>
-    </tr>
-    </thead>
-    <tbody>
-    <!--/*@thymesVar id="users" type="java.util.List<ru.javaops.masterjava.persist.model.User>"*/-->
-    <tr th:each="user,iter: ${users}">
-        <td th:text="${iter.count}"></td>
-        <td th:text="${user.fullName}"></td>
-        <td th:utext="${user.email}"></td>
-        <td th:text="${user.flag}"></td>
-    </tr>
-    </tbody>
-</table>
+<section>
+    <table border="1" cellpadding="8" cellspacing="0">
+        <thead>
+        <tr>
+            <th>#</th>
+            <th>Full Name</th>
+            <th>Email</th>
+            <th>Flag</th>
+            <th/>
+        </tr>
+        </thead>
+        <tbody>
+        <!--/*@thymesVar id="users" type="java.util.List<ru.javaops.masterjava.persist.model.User>"*/-->
+        <tr th:each="user,iter: ${users}">
+            <td th:text="${iter.count}"></td>
+            <td th:text="${user.fullName}"></td>
+            <td th:utext="${user.email}"></td>
+            <td th:text="${user.flag}"></td>
+            <td><input type="checkbox" th:value="|${user.fullName} <${user.email}>|"/></td>
+        </tr>
+        </tbody>
+    </table>
+    <hr/>
+    <p>
+        <input id="subject" placeholder="subject" size="30">
+    </p>
+    <p>
+        <textarea id="body" placeholder="mail body" cols=75 rows=5></textarea><br/>
+    </p>
+    <p>
+        <button type="button" onclick="send()">Send</button>
+    </p>
+    <pre id="result"></pre>
+</section>
+<script type="text/javascript">
+    function send() {
+        $('#result').html("Sending ...");
+        var users = $("input:checkbox:checked").map(function () {
+            return this.value;
+        }).get();
+//        https://stackoverflow.com/a/22213543/548473
+        $.post("send", "users=" + users + "&subject=" + $("#subject").val() + "&body=" + $("#body").val())
+            .done(function (result) {
+                $('#result').html(result);
+            })
+            .fail(function (result) {
+                $('#result').html(result);
+            });
+    }
+</script>
 </body>
 </html>
\ No newline at end of file
Index: services/mail-api/src/main/java/ru/javaops/masterjava/service/mail/MailWSClient.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- services/mail-api/src/main/java/ru/javaops/masterjava/service/mail/MailWSClient.java	(date 1512398085000)
+++ services/mail-api/src/main/java/ru/javaops/masterjava/service/mail/MailWSClient.java	(revision )
@@ -1,5 +1,8 @@
 package ru.javaops.masterjava.service.mail;
 
+import com.google.common.base.Splitter;
+import com.google.common.collect.ImmutableSet;
+import com.google.common.collect.Iterables;
 import com.google.common.io.Resources;
 import lombok.extern.slf4j.Slf4j;
 import ru.javaops.masterjava.web.WsClient;
@@ -20,8 +23,22 @@
     }
 
 
-    public static void sendToGroup(final Set<Addressee> to, final Set<Addressee> cc, final String subject, final String body) {
-        log.info("Send mail to '" + to + "' cc '" + cc + "' subject '" + subject + (log.isDebugEnabled() ? "\nbody=" + body : ""));
-        WS_CLIENT.getPort().sendToGroup(to, cc, subject, body);
+    public static String sendToGroup(final Set<Addressee> to, final Set<Addressee> cc, final String subject, final String body) {
+        log.info("Send to group to '" + to + "' cc '" + cc + "' subject '" + subject + (log.isDebugEnabled() ? "\nbody=" + body : ""));
+        String status = WS_CLIENT.getPort().sendToGroup(to, cc, subject, body);
+        log.info("Send to group with status: " + status);
+        return status;
+    }
+
+    public static GroupResult sendBulk(final Set<Addressee> to, final String subject, final String body) {
+        log.info("Send bulk to '" + to + "' subject '" + subject + (log.isDebugEnabled() ? "\nbody=" + body : ""));
+        GroupResult result = WS_CLIENT.getPort().sendBulk(to, subject, body);
+        log.info("Sent bulk with result: " + result);
+        return result;
+    }
+
+    public static Set<Addressee> split(String addressees) {
+        Iterable<String> split = Splitter.on(',').trimResults().omitEmptyStrings().split(addressees);
+        return ImmutableSet.copyOf(Iterables.transform(split, Addressee::new));
     }
 }
