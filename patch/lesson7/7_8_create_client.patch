Index: common/src/main/resources/hosts.conf
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- common/src/main/resources/hosts.conf	(revision )
+++ common/src/main/resources/hosts.conf	(revision )
@@ -0,0 +1,4 @@
+hosts {
+  mail = "http://localhost:8080"
+}
+include file("/apps/masterjava/config/hosts.conf")
Index: common/src/main/java/ru/javaops/masterjava/web/WsClient.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- common/src/main/java/ru/javaops/masterjava/web/WsClient.java	(revision )
+++ common/src/main/java/ru/javaops/masterjava/web/WsClient.java	(revision )
@@ -0,0 +1,40 @@
+package ru.javaops.masterjava.web;
+
+import com.typesafe.config.Config;
+import ru.javaops.masterjava.config.Configs;
+
+import javax.xml.namespace.QName;
+import javax.xml.ws.BindingProvider;
+import javax.xml.ws.Service;
+import java.net.URL;
+import java.util.Map;
+
+public class WsClient<T> {
+    private static Config HOSTS;
+
+    private final Class<T> serviceClass;
+    private final Service service;
+    private String endpointAddress;
+
+    static {
+        HOSTS = Configs.getConfig("hosts.conf", "hosts");
+    }
+
+    public WsClient(URL wsdlUrl, QName qname, Class<T> serviceClass) {
+        this.serviceClass = serviceClass;
+        this.service = Service.create(wsdlUrl, qname);
+    }
+
+    public void init(String host, String endpointAddress) {
+        this.endpointAddress = HOSTS.getString(host) + endpointAddress;
+    }
+
+    //  Post is not thread-safe (http://stackoverflow.com/a/10601916/548473)
+    public T getPort() {
+        T port = service.getPort(serviceClass);
+        BindingProvider bp = (BindingProvider) port;
+        Map<String, Object> requestContext = bp.getRequestContext();
+        requestContext.put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY, endpointAddress);
+        return port;
+    }
+}
Index: services/mail-api/src/main/java/ru/javaops/masterjava/service/mail/MailWSClient.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- services/mail-api/src/main/java/ru/javaops/masterjava/service/mail/MailWSClient.java	(revision )
+++ services/mail-api/src/main/java/ru/javaops/masterjava/service/mail/MailWSClient.java	(revision )
@@ -0,0 +1,27 @@
+package ru.javaops.masterjava.service.mail;
+
+import com.google.common.io.Resources;
+import lombok.extern.slf4j.Slf4j;
+import ru.javaops.masterjava.web.WsClient;
+
+import javax.xml.namespace.QName;
+import java.util.List;
+
+@Slf4j
+public class MailWSClient {
+    private static final WsClient<MailService> WS_CLIENT;
+
+    static {
+        WS_CLIENT = new WsClient<>(Resources.getResource("wsdl/mailService.wsdl"),
+                new QName("http://mail.javaops.ru/", "MailServiceImplService"),
+                MailService.class);
+
+        WS_CLIENT.init("mail", "/mail/mailService?wsdl");
+    }
+
+
+    public static void sendMail(final List<Addressee> to, final List<Addressee> cc, final String subject, final String body) {
+        log.info("Send mail to '" + to + "' cc '" + cc + "' subject '" + subject + (log.isDebugEnabled() ? "\nbody=" + body : ""));
+        WS_CLIENT.getPort().sendMail(to, cc, subject, body);
+    }
+}
Index: services/mail-api/src/test/java/ru/javaops/masterjava/service/mail/MailWSClientMain.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- services/mail-api/src/test/java/ru/javaops/masterjava/service/mail/MailWSClientMain.java	(revision )
+++ services/mail-api/src/test/java/ru/javaops/masterjava/service/mail/MailWSClientMain.java	(revision )
@@ -0,0 +1,11 @@
+package ru.javaops.masterjava.service.mail;
+
+import com.google.common.collect.ImmutableList;
+
+public class MailWSClientMain {
+    public static void main(String[] args) {
+        MailWSClient.sendMail(
+                ImmutableList.of(new Addressee("To <masterjava@javaops.ru>")),
+                ImmutableList.of(new Addressee("Copy <masterjava@javaops.ru>")), "Subject", "Body");
+    }
+}
\ No newline at end of file
Index: services/mail-api/src/test/resources/wsdl/mailService.wsdl
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- services/mail-api/src/test/resources/wsdl/mailService.wsdl	(revision )
+++ services/mail-api/src/test/resources/wsdl/mailService.wsdl	(revision )
@@ -0,0 +1,65 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<definitions xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata"
+             xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
+             xmlns:tns="http://mail.javaops.ru/"
+             xmlns:xs="http://www.w3.org/2001/XMLSchema"
+             xmlns="http://schemas.xmlsoap.org/wsdl/"
+             targetNamespace="http://mail.javaops.ru/"
+             name="MailServiceImplService">
+    <types>
+        <xs:schema targetNamespace="http://mail.javaops.ru/">
+            <xs:element name="sendMail" type="tns:sendMail"/>
+            <xs:element name="sendMailResponse" type="tns:sendMailResponse"/>
+
+            <xs:complexType name="sendMail">
+                <xs:sequence>
+                    <xs:element name="to" type="tns:addressee" minOccurs="0" maxOccurs="unbounded"/>
+                    <xs:element name="cc" type="tns:addressee" minOccurs="0" maxOccurs="unbounded"/>
+                    <xs:element name="subject" type="xs:string" minOccurs="0"/>
+                    <xs:element name="body" type="xs:string" minOccurs="1"/>
+                </xs:sequence>
+            </xs:complexType>
+
+            <xs:complexType name="addressee">
+                <xs:simpleContent>
+                    <xs:extension base="xs:string">
+                        <xs:attribute type="xs:string" name="email"/>
+                    </xs:extension>
+                </xs:simpleContent>
+            </xs:complexType>
+
+            <xs:complexType name="sendMailResponse">
+                <xs:sequence/>
+            </xs:complexType>
+        </xs:schema>
+    </types>
+    <message name="sendMail">
+        <part name="parameters" element="tns:sendMail"/>
+    </message>
+    <message name="sendMailResponse">
+        <part name="parameters" element="tns:sendMailResponse"/>
+    </message>
+    <portType name="MailService">
+        <operation name="sendMail">
+            <input wsam:Action="http://mail.service.masterjava.javaops.ru/MailService/sendMailRequest" message="tns:sendMail"/>
+            <output wsam:Action="http://mail.service.masterjava.javaops.ru/MailService/sendMailResponse" message="tns:sendMailResponse"/>
+        </operation>
+    </portType>
+    <binding name="MailServiceImplPortBinding" type="tns:MailService">
+        <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
+        <operation name="sendMail">
+            <soap:operation soapAction=""/>
+            <input>
+                <soap:body use="literal"/>
+            </input>
+            <output>
+                <soap:body use="literal"/>
+            </output>
+        </operation>
+    </binding>
+    <service name="MailServiceImplService">
+        <port name="MailServiceImplPort" binding="tns:MailServiceImplPortBinding">
+            <soap:address location="http://localhost:8080/mail/mailService"/>
+        </port>
+    </service>
+</definitions>
\ No newline at end of file
